{"version":3,"file":"static/js/698.278a4bd9.chunk.js","mappings":"oPAEaA,EAAcC,EAAAA,GAAAA,GAAH,gEAMXC,EAAWD,EAAAA,GAAAA,GAAH,uEAKRE,EAASF,EAAAA,GAAAA,GAAH,8E,mJCPNG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,qCAIVK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,oFAMTO,GAAcP,EAAAA,EAAAA,IAAOQ,EAAAA,EAAPR,CAAH,yDAKXS,EAAaT,EAAAA,GAAAA,MAAH,kF,SCbjBU,EAAgB,CAElBC,MAAO,GACPC,SAAU,IAGDC,EAAkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAExBC,GAAWC,EAAAA,EAAAA,MAiBjB,OAXJF,EAAe,SAACG,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAErBC,QAAQC,IAAIH,GAEZF,GAASM,EAAAA,EAAAA,IAAwBJ,IACjCC,GACH,GAMO,iCACG,SAAC,KAAD,oDACH,SAAC,KAAD,CAAQR,cAAeA,EAAeY,SAAUR,EAAhD,UACK,UAACT,EAAD,CAAWkB,aAAa,MAAxB,WAGG,UAACd,EAAD,CAAYe,QAAQ,QAApB,oBAEI,SAACrB,EAAD,CAClBsB,KAAK,QACLC,KAAK,QAELC,MAAM,8CACNC,UAAQ,QAImB,UAACnB,EAAD,CAAYe,QAAQ,WAApB,uBAET,SAACrB,EAAD,CAClBsB,KAAK,WACLC,KAAK,WACLG,QAAQ,QACRF,MAAM,2BACNC,UAAQ,QAIM,SAACrB,EAAD,CAAcuB,QAAQ,WAAWL,KAAK,SAAtC,2BASf,ECnEc,SAASM,IACpB,OACI,SAAClB,EAAD,GAEP,C","sources":["components/Phonebook/Contacts/Contacts.styled.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const ListWrapper = styled.ul`\nlist-style: none;\n\npadding-left:0;\n\n`\nexport const ListItem = styled.li`\ndisplay:flex;\njustify-content:space-between;\n`\n\nexport const Header = styled.h2`\n\ntext-align: center;\n\nborder-top: 1px solid black;\n`\n\n","import styled from 'styled-components'\nimport { Field, Form } from 'formik'\nimport Button from '@mui/material/Button';\n\n\n\nexport const LogInField = styled(Field)`\nwidth:100%;\n`\n\nexport const LogInForm = styled(Form)`\ndisplay:flex;\nflex-direction:column;\nalign-items:center;\n`\n\nexport const LogInSubmit = styled(Button)`\nwidth: 100px;\nmargin-top:15px;\n`\n\nexport const LogInLabel = styled.label`\ndisplay:flex;\nflex-direction:column;\nmargin-bottom:10px;`","import { Header } from \"components/Phonebook/Contacts/Contacts.styled\";\nimport { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { logInUserThunkOperation } from \"redux/auth/authOperations\";\nimport { LogInField, LogInForm, LogInLabel, LogInSubmit } from \"./LoginForm.styled\";\n// import {  } from \"redux/auth/authOperations\"; додати операцію на логІн \n\n\nconst initialValues = {\n    \n    email: '',\n    password: ''\n}\n   \nexport const LoginFormikForm = ({ handleSubmit }) => {\n\n    const dispatch = useDispatch();\n    \n     \n\n    \n    \nhandleSubmit = (values, {resetForm}) => {\n        \n    console.log(values)\n\n    dispatch(logInUserThunkOperation(values))\n    resetForm();\n}\n    \n     \n  \n\n    return (\n        <>\n           <Header>Please enter your email and password</Header>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n             <LogInForm autoComplete='off'>\n            \n\n                <LogInLabel htmlFor=\"email\">\n                   email:\n                    <LogInField\n  type=\"email\"\n  name=\"email\"\n//   pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\"\n  title=\"the system is waiting for your valid e-mail\"\n  required\n/>\n                    </LogInLabel>\n                    \n                             <LogInLabel htmlFor=\"password\">\n                   password:\n                    <LogInField\n  type=\"password\"\n  name=\"password\"\n  pattern=\".{8,}\"\n  title=\"Eight or more characters\"\n  required\n/>\n               </LogInLabel>\n            \n                <LogInSubmit  variant=\"outlined\" type=\"submit\">Submit</LogInSubmit>\n      \n \n\n        \n        </LogInForm>\n            </Formik>\n        </>\n    )\n}","import { LoginFormikForm } from \"components/LoginForm/LoginForm\"\n\n\n\nexport default function LoginPage()  {\n    return (\n        <LoginFormikForm />\n    )\n}"],"names":["ListWrapper","styled","ListItem","Header","LogInField","Field","LogInForm","Form","LogInSubmit","Button","LogInLabel","initialValues","email","password","LoginFormikForm","handleSubmit","dispatch","useDispatch","values","resetForm","console","log","logInUserThunkOperation","onSubmit","autoComplete","htmlFor","type","name","title","required","pattern","variant","LoginPage"],"sourceRoot":""}