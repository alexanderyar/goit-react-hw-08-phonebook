{"version":3,"file":"static/js/751.782d9b70.chunk.js","mappings":"oPAEaA,EAAcC,EAAAA,GAAAA,GAAH,gEAMXC,EAAWD,EAAAA,GAAAA,GAAH,uEAKRE,EAASF,EAAAA,GAAAA,GAAH,8E,iICRNG,GAAeH,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,CAAH,0BAKZK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qLAWFA,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,iH,yJChBLQ,EAAiBR,EAAAA,GAAAA,IAAH,+GAOdS,GAAgBT,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,+DAKbU,GAAiBV,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,CAAH,wC,4ICPrBW,EAAgB,CAClBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGDC,EAAqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAE3BC,GAAWC,EAAAA,EAAAA,MAiBjB,OAXJF,EAAe,SAACG,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAErBC,QAAQC,IAAIH,GAEZF,GAASM,EAAAA,EAAAA,IAAyBJ,IAClCC,GACH,GAMO,iCACG,SAAC,KAAD,kCACH,SAAC,KAAD,CAAQT,cAAeA,EAAea,SAAUR,EAAhD,UACK,UAAC,KAAD,CAAYS,aAAa,MAAzB,WACO,UAAC,KAAD,YACK,mBAAOC,QAAQ,OAAf,8BAEb,SAAC,KAAD,CACIC,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,yIACFC,UAAQ,QAGZ,mBAAOJ,QAAQ,QAAf,oBAEI,SAAC,KAAD,CAClBC,KAAK,QACLf,KAAK,QAELiB,MAAM,8CACNC,UAAQ,QAImB,mBAAOJ,QAAQ,WAAf,uBAET,SAAC,KAAD,CAClBC,KAAK,WACLf,KAAK,WACLgB,QAAQ,QACRC,MAAM,2BACNC,UAAQ,WAKM,SAAC,KAAD,CAAgBC,QAAQ,YAAYJ,KAAK,SAAzC,2BASf,EC/Ec,SAASK,IACpB,OAEA,SAACjB,EAAD,GAIH,C","sources":["components/Phonebook/Contacts/Contacts.styled.jsx","components/Phonebook/Form/Form.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const ListWrapper = styled.ul`\nlist-style: none;\n\npadding-left:0;\n\n`\nexport const ListItem = styled.li`\ndisplay:flex;\njustify-content:space-between;\n`\n\nexport const Header = styled.h2`\n\ntext-align: center;\n\nborder-top: 1px solid black;\n`\n\n","import styled from 'styled-components'\nimport { Form, Field } from 'formik';\nimport { Button } from '@mui/material';\n\n\nexport const ButtonStyled = styled(Button)`\n\n`\n    \n\nexport const FormStyled = styled(Form)`\n\ndisplay:flex;\nflex-direction: column;\nborder: 1px solid black;\npadding: 10px;\n// background: rgb(9,10,121);\n// color:white;\n  align-items: center;\n`\n\nexport const Input = styled(Field)`\nmargin-right:15px;\n\nfont-size:18;\nfont-weight:700;\ncolor:black;\nmargin-bottom:10px;\n`\n\n\n\n// padding-left: 15px; \n// padding-right: 15px;\n// background-color: violet;","import { Field } from 'formik'\nimport styled from 'styled-components'\nimport Button from '@mui/material/Button';\n\n\nexport const InputContainer = styled.div`\ndisplay:flex;\nflex-direction:column;\nalign-items: center;\njustify-content: center;\n`\n\nexport const RegisterInput = styled(Field)`\ndisplay:flex;\nflex-direction:column;\n`\n\nexport const RegisterSubmit = styled(Button)`\nwidth: 100px;\n\n`","import { Header } from \"components/Phonebook/Contacts/Contacts.styled\";\nimport { FormStyled } from \"components/Phonebook/Form/Form.styled\";\nimport { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { createUserThunkOperation } from \"redux/auth/authOperations\";\nimport { InputContainer, RegisterInput, RegisterSubmit  } from \"./RegisterForm.styled\";\n\n\n\n\nconst initialValues = {\n    name: '',\n    email: '',\n    password: ''\n}\n   \nexport const RegisterFormikForm = ({ handleSubmit }) => {\n\n    const dispatch = useDispatch();\n    \n     \n\n    \n    \nhandleSubmit = (values, {resetForm}) => {\n        \n    console.log(values)\n\n    dispatch(createUserThunkOperation(values))\n    resetForm();\n}\n    \n     \n  \n\n    return (\n        <>\n           <Header>Welcome, new User!</Header>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n             <FormStyled autoComplete='off'>\n                    <InputContainer>\n                         <label htmlFor=\"name\">\n               Enter your name:\n            <RegisterInput\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required />\n                </label>\n\n                <label htmlFor=\"email\">\n                   email:\n                    <RegisterInput\n  type=\"email\"\n  name=\"email\"\n//   pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\"\n  title=\"the system is waiting for your valid e-mail\"\n  required\n/>\n                    </label>\n                    \n                             <label htmlFor=\"password\">\n                   password:\n                    <RegisterInput\n  type=\"password\"\n  name=\"password\"\n  pattern=\".{8,}\"\n  title=\"Eight or more characters\"\n  required\n/>\n               </label>\n           </InputContainer>\n            \n                <RegisterSubmit variant=\"contained\" type=\"submit\">Submit</RegisterSubmit>\n      {/* <Button variant=\"contained\" */}\n \n\n        \n        </FormStyled>\n            </Formik>\n        </>\n    )\n}","import { RegisterFormikForm } from \"components/RegisterForm/RegisterForm\"\n\n\n\nexport default function RegisterPage() {\n    return (\n    \n    <RegisterFormikForm />\n)\n\n\n}"],"names":["ListWrapper","styled","ListItem","Header","ButtonStyled","Button","FormStyled","Form","Field","InputContainer","RegisterInput","RegisterSubmit","initialValues","name","email","password","RegisterFormikForm","handleSubmit","dispatch","useDispatch","values","resetForm","console","log","createUserThunkOperation","onSubmit","autoComplete","htmlFor","type","pattern","title","required","variant","RegisterPage"],"sourceRoot":""}